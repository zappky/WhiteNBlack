
@{
    ViewBag.Title = "QuitCentres";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
      integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
      crossorigin="" />

<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
        integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
        crossorigin=""></script>
<script type="text/javascript" src="~/Scripts/leaflet.ajax.min.js"></script>
<script type="text/javascript" src="~/Scripts/leaflet-knn.min.js"></script>

<style>
    #mapid {
        height: 700px;
    }
</style>
<br/>
<h2>Quit Centres</h2>
<button class="btn btn-outline-primary" style="border-radius:2px; padding:2px; height:40px;width:100px;" onclick="getLocation()">Find nearest</button>
<div id="mapid"></div>


<script>
    var quitCentres = "/Content/quit-centres-geojson.geojson";
    var map = L.map('mapid').setView([1.3521, 103.8198], 13);

    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
        maxZoom: 18,
        id: 'mapbox/streets-v11',
        tileSize: 512,
        zoomOffset: -1,
        accessToken: 'pk.eyJ1IjoiaGlnaHBpZXMiLCJhIjoiY2p0Nml4NmR1MGhxajRhczA1NGFqZXV0NSJ9.c2tn1B3vCBSVni_W9dXQkQ'
    }).addTo(map);
    function onEachFeature(feature, layer) {
        if (feature.properties && feature.properties.Description) {
            layer.bindPopup(feature.properties.Description, {
                maxWidth: "auto"});

        }
    }
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                latit = position.coords.latitude;
                longit = position.coords.longitude;
                // this is just a marker placed in that position
                var currntIcon = L.icon({
                    iconUrl: '/images/placeholder.png',

                    iconSize: [30, 36],
                    iconAnchor: [15, 36],
                    shadowAnchor: [4, 62],  // the same for the shadow
                    popupAnchor: [-3, -26] // point from which the popup should open relative to the iconAnchor
                });
                var abc = L.marker([position.coords.latitude, position.coords.longitude], { icon: currntIcon }).addTo(map);
                // move the map to have the location in its center
                abc.bindPopup("Your location.").openPopup();
                map.panTo(new L.LatLng(latit, longit));
                map.setView([position.coords.latitude, position.coords.longitude], 15);
            }); 
        }
    }
    var data =  L.geoJson.ajax(quitCentres, {
        onEachFeature: onEachFeature
    })
    data.addTo(map);



</script>